{
	"info": {
		"_postman_id": "acf59845-b716-4400-9ea8-8ae3317158ef",
		"name": "Adalo Collections API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4972045"
	},
	"item": [
		{
			"name": "Create application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Save applicantId value in collection variable ",
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"applicantId\", responseJson.id);",
							"",
							"// Test that status code is 200 OK ",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"// Print the response status to the console ",
							"console.log(pm.response.status);",
							"",
							"// Set itemId value from the reponse to the environment variable itemsId for future use",
							"// pm.environment.set(\"itemId\", jsonData.id);",
							"// console.log(pm.environmentVariable);",
							"",
							"// pm.test(\"Test data type of the response\", () => {",
							"//   pm.expect(responseJson).to.be.an(\"object\");",
							"//   pm.expect(responseJson.id).to.be.a(\"number\");",
							"//   pm.expect(responseJson.Name).to.be.a(\"string\");",
							"//   pm.expect(responseJson.Category).to.be.an(\"number\");",
							"// //   pm.expect(responseJson.created_at).to.be.a(\"datetime\");",
							"// //   pm.expect(responseJson.updated_at).to.be.a(\"datetime\");",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{Authorization}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Full Name\": \"{{$randomFirstName}} {{$randomLastName}}\",\n    \"Applicant Email\": \"{{$randomEmail}}\",\n    \"Open Job\": 4,\n    \"Resume Url\": \"https://{{$randomDomainName}}/resumes/automation-engineer/\",\n    \"Applicant\": 17,\n    \"Recruiter Assigned\": 18,\n    \"Application Stage\": 1\n}"
				},
				"url": {
					"raw": "https://api.adalo.com/v0/apps/{{appId}}/collections/{{collectionId}}/",
					"protocol": "https",
					"host": [
						"api",
						"adalo",
						"com"
					],
					"path": [
						"v0",
						"apps",
						"{{appId}}",
						"collections",
						"{{collectionId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test response code is 200 OK",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"console.log(pm.response.status);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer 9yppkfhxe1ijmzloap2m1cn8f",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Application Stage\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.adalo.com/v0/apps/{{appId}}/collections/{{collectionId}}/{{applicantId}}",
					"protocol": "https",
					"host": [
						"api",
						"adalo",
						"com"
					],
					"path": [
						"v0",
						"apps",
						"{{appId}}",
						"collections",
						"{{collectionId}}",
						"{{applicantId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all applications",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse reponse json body ",
							"const responseJson = pm.response.json();",
							"",
							"// Test that resopnse status is 200 OK ",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"console.log(pm.response.status);",
							"",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(responseJson).to.be.an(\"object\");",
							"  pm.expect(responseJson.records).to.be.a(\"array\");",
							"//   pm.expect(responseJson.Name).to.be.a(\"string\");",
							"//   pm.expect(responseJson.Category).to.be.an(\"number\");",
							"//   pm.expect(responseJson.created_at).to.be.a(\"datetime\");",
							"//   pm.expect(responseJson.updated_at).to.be.a(\"datetime\");",
							"});",
							"",
							"",
							"pm.test('Response contains new applicant created', () => {",
							"    const applicantCreated = pm.response.json().records.find(applicant => applicant.id === pm.environment.get('applicantId'));",
							"    pm.expect(applicantCreated.id).to.equal(pm.environment.get('applicantId'));",
							"",
							"    console.log(\"applicantCreated\", applicantCreated);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.adalo.com/v0/apps/apps/{{appId}}/collections/{{collectionId}}/",
					"protocol": "https",
					"host": [
						"api",
						"adalo",
						"com"
					],
					"path": [
						"v0",
						"apps",
						"apps",
						"{{appId}}",
						"collections",
						"{{collectionId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"console.log(pm.response.status);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.adalo.com/v0/apps/{{appId}}/collections/{{collectionId}}/{{applicantId}}",
					"protocol": "https",
					"host": [
						"api",
						"adalo",
						"com"
					],
					"path": [
						"v0",
						"apps",
						"{{appId}}",
						"collections",
						"{{collectionId}}",
						"{{applicantId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all jobs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test that resopnse status is 200 OK ",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// console.log(pm.response.status);",
							"",
							"const responseJson = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(responseJson).to.be.an(\"object\");",
							"  pm.expect(responseJson.records).to.be.a(\"array\");",
							"//   pm.expect(responseJson.Name).to.be.a(\"string\");",
							"//   pm.expect(responseJson.Category).to.be.an(\"number\");",
							"//   pm.expect(responseJson.created_at).to.be.a(\"datetime\");",
							"//   pm.expect(responseJson.updated_at).to.be.a(\"datetime\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiBaseUrl}}/v0/apps/{{appId}}/collections/{{jobsCollectionId}}",
					"host": [
						"{{apiBaseUrl}}"
					],
					"path": [
						"v0",
						"apps",
						"{{appId}}",
						"collections",
						"{{jobsCollectionId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse reponse json body ",
							"const responseJson = pm.response.json();",
							"",
							"// Test that resopnse status is 200 OK ",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"console.log(pm.response.status);",
							"",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(responseJson).to.be.an(\"object\");",
							"  pm.expect(responseJson.records).to.be.a(\"array\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiBaseUrl}}/v0/apps/{{appId}}/collections/{{usersCollectionId}}",
					"host": [
						"{{apiBaseUrl}}"
					],
					"path": [
						"v0",
						"apps",
						"{{appId}}",
						"collections",
						"{{usersCollectionId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "9yppkfhxe1ijmzloap2m1cn8f",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "itemId",
			"value": "9"
		}
	]
}